// summary.tsx
import React, { useState } from "react";
import { Col, Row, Button, Form, Modal, Image } from "react-bootstrap";
import dayjs from "dayjs";
import "dayjs/locale/th";
import { Viewer } from "@react-pdf-viewer/core";
import "@react-pdf-viewer/core/lib/styles/index.css";
import { db } from "../../../firebaseConfig";
import { collection, addDoc } from "firebase/firestore";
import AlertModal from "../textFillComponent/alertModal";

const formatDate = (date: Date | null) => {
  if (!date) return "-";
  const formattedDate = dayjs(date).locale("th").format("D MMMM YYYY");
  const buddhistYear = dayjs(date).year() + 543;
  return formattedDate.replace(`${dayjs(date).year()}`, `${buddhistYear}`);
};

interface SummaryProps {
  ownerData: string;
  usernameData: string;
  selectedProvince: string | null;
  engineSize: string | null;
  contactNumber: string;
  registrationNumber: string;
  CCorWeight: string;
  carOrMotorcycleLabel: string;
  registrationDate: Date | null;
  expirationDate: Date | null;
  latestTaxPaymentDate: Date | null;
  selectedRadio: string | null;
  bikeTypeOrDoorCount: string | null;
  selectedCarType: string | null;
  totalCost: number | null;
  prbCost: number | null; // ‡∏Ñ‡πà‡∏≤‡∏û‡∏£‡∏ö.‡∏™‡∏∏‡∏ó‡∏ò‡∏¥
  taxCost: number | null; // ‡∏Ñ‡πà‡∏≤‡∏†‡∏≤‡∏©‡∏µ‡∏™‡∏∏‡∏ó‡∏ò‡∏¥
  lateFee: number | null; // ‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤
  inspectionCost: number | null; // ‡∏Ñ‡πà‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏†‡∏≤‡∏û
  processingCost: number | null; // ‡∏Ñ‡πà‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£
  carAge: { years: number; months: number; days: number };
  selectedRegistrationBookFile: File | null;
  selectedLicenseFile: File | null;
  onBack: () => void; // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
  onConfirm: () => void; // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
}

const Summary: React.FC<SummaryProps> = ({
  ownerData,
  usernameData,
  selectedProvince,
  engineSize,
  contactNumber,
  registrationNumber,
  registrationDate,
  expirationDate,
  CCorWeight,
  carOrMotorcycleLabel,
  latestTaxPaymentDate,
  selectedRadio,
  bikeTypeOrDoorCount,
  selectedCarType,
  totalCost,
  prbCost,
  taxCost,
  lateFee,
  inspectionCost,
  processingCost,
  carAge,
  selectedRegistrationBookFile,
  selectedLicenseFile,
  onBack,
}) => {
  const [showModal, setShowModal] = useState(false);
  const [modalMessage, setModalMessage] = useState("");
  const [success, setSuccess] = useState(false);

  const handleOpenModal = () => {
    setModalMessage("‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤\n‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°?");
    setSuccess(false);
    setShowModal(true);
  };

  const [showPhotoModal, setShowPhotoModal] = useState(false);
  const [previewUrl, setPreviewUrl] = useState<string | null>(null);
  const [fileType, setFileType] = useState<string | null>(null);

  const handleShowPreview = (file: File | null) => {
    if (file) {
      const previewUrl = URL.createObjectURL(file); // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
      setPreviewUrl(previewUrl);
      setFileType(file.type); // ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
      setShowPhotoModal(true);
    }
  };

  const handleCloseModal = () => {
    setShowPhotoModal(false);
    setPreviewUrl(null);
    setFileType(null);
  };

  const handleConfirm = async () => {
    try {
      const formData = new FormData();
      if (selectedRegistrationBookFile) {
        formData.append("registrationBookFile", selectedRegistrationBookFile);
      }
      if (selectedLicenseFile) {
        formData.append("licensePlateFile", selectedLicenseFile);
      }
      console.log("FormData content:", Array.from(formData.entries()));

      const response = await fetch(
        "${process.env.VITE_API_BASE_URL}/upload-multiple",
        {
          method: "POST",
          body: formData,
        }
      );

      if (!response.ok) {
        const errorData = await response.json();
        console.error("Upload error details:", errorData);
        throw new Error("Failed to upload files to server");
      }

      const responseData = await response.json();

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ responseData ‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
      if (
        !responseData.registrationBookFile ||
        !responseData.licensePlateFile
      ) {
        throw new Error("Response data missing required files");
      }

      const { registrationBookFile, licensePlateFile } = responseData;

      console.log("Files uploaded successfully:", {
        registrationBookFile,
        licensePlateFile,
      });

      const data = {
        ownerData: ownerData || "",
        usernameData: usernameData || "",
        selectedProvince: selectedProvince || "",
        engineSize: engineSize || "0",
        contactNumber: contactNumber || "",
        registrationNumber: registrationNumber || "",
        registrationDate: registrationDate ? registrationDate : new Date(),
        expirationDate: expirationDate ? expirationDate : new Date(),
        latestTaxPaymentDate: latestTaxPaymentDate
          ? latestTaxPaymentDate
          : new Date(),
        bikeTypeOrDoorCount: bikeTypeOrDoorCount || "",
        selectedCarType: selectedCarType || "",
        totalCost: totalCost || 0,
        prbCost: prbCost || 0,
        taxCost: taxCost || 0,
        lateFee: lateFee || 0,
        inspectionCost: inspectionCost || 0,
        processingCost: processingCost || 0,
        carAge: carAge || { years: 0, months: 0, days: 0 },
        CCorWeight: CCorWeight || "",
        carOrMotorcycleLabel: carOrMotorcycleLabel || "",
        selectedRadio: selectedRadio || "",
      };

      const updatedData = {
        usernameData: data.usernameData,
        province: data.selectedProvince,
        vehicleType: data.selectedCarType,
        bikeTypeOrDoorCount: data.bikeTypeOrDoorCount,
        weightOrCC: data.CCorWeight,
        engineSize: data.engineSize,
        registrationDate: formatDate(data.registrationDate),
        expirationDate: formatDate(data.expirationDate), // formatDate only to show on UI, not here
        latestTaxPaymentDate: formatDate(data.latestTaxPaymentDate),
        vehicleAge: data.carAge,
        contactNumber: data.contactNumber,
        ownerData: data.ownerData,
        prbCost: data.prbCost,
        registrationNumber: data.registrationNumber,
        taxCost: data.taxCost,
        lateFee: data.lateFee,
        inspectionCost: data.inspectionCost,
        processingCost: data.processingCost,
        totalCost: data.totalCost,
        CCorWeight: data.CCorWeight,
        carOrMotorcycleLabel: data.carOrMotorcycleLabel,
        selectedRadio: data.selectedRadio,
        registrationBookFilePath: registrationBookFile.filePath,
        registrationBookStoredFileName: registrationBookFile.storedFileName,
        licensePlateFilePath: licensePlateFile.filePath,
        licensePlateStoredFileName: licensePlateFile.storedFileName,
      };

      const docRef = await addDoc(collection(db, "prbform"), updatedData);
      console.log("Document written with ID: ", docRef.id);

      setModalMessage(
        `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‚úÖ\n‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏ö‡∏û‡∏£‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡∏ï‡∏•‡∏≠‡∏î‡πÑ‡∏õ üôè‚ù§Ô∏è \n\nüì¢‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß \n‡∏ó‡πà‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° SMS ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô \n‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏Ø‡∏û.‡∏£.‡∏ö.‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏°‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏∞‚ù§Ô∏è`
      );
      setSuccess(true);
    } catch (error) {
      console.error("Error uploading file or saving data:", error);
      setModalMessage("‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
      setSuccess(false);
    } finally {
      setShowModal(true);
    }
  };

  return (
    <div>
      <Form>
        <h2 className="text-center mb-4">‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h2>

        <Row>
          {/* <Col md={6}>
          <h5 className="mb-3">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ</h5>
          <ul className="list-unstyled">
            <li className="mb-1">
              <strong>‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏£‡∏ñ:</strong> {usernameData}
            </li>
            <li className="mb-1">
              <strong>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î:</strong> {selectedProvince}
            </li>
            <li className="mb-1">
              <strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ:</strong> {selectedCarType}
            </li>
            <li className="mb-1">
              <strong>{carOrMotorcycleLabel}:</strong> {bikeTypeOrDoorCount}
            </li>
            <li className="mb-1">
              <strong>‚úÖ‡∏Ñ‡πà‡∏≤‡∏û‡∏£‡∏ö.‡∏ï‡∏≤‡∏°{CCorWeight}üöò:</strong> {engineSize}
            </li>
            <li className="mb-1">
              <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ:</strong> {registrationNumber}
            </li>
            <li className="mb-1">
              <strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏î‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô:</strong> {formatDate(registrationDate)}
            </li>
            <li className="mb-1">
              <strong>‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏≠‡∏≤‡∏¢‡∏∏:</strong> {formatDate(expirationDate)}
            </li>
            <li className="mb-1">
              <strong>‡∏ß‡∏±‡∏ô‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏µ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:</strong>{" "}
              {formatDate(latestTaxPaymentDate)}
            </li>
            <li className="mb-4">
              <strong>‡∏≠‡∏≤‡∏¢‡∏∏‡∏£‡∏ñ:</strong> {carAge.years} ‡∏õ‡∏µ, {carAge.months} ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô,{" "}
              {carAge.days} ‡∏ß‡∏±‡∏ô
            </li>
          </ul>
        </Col> */}

          <Col>
            {/* <h5 className="mb-3">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h5>
          <ul className="list-unstyled">
            <li className="mb-1">
              <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠:</strong> {contactNumber}
            </li>
            <li className="mb-1">
              <strong>{selectedRadio}:</strong> {ownerData}
            </li>
          </ul> */}

            {totalCost !== null && (
              <ul className="list-unstyled mt-4">
                {/* <h5 className="mt-3">‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢</h5> */}
                {/* <li className="mb-1">
                <strong>‚úÖ‡∏Ñ‡πà‡∏≤‡∏û‡∏£‡∏ö.‡∏ï‡∏≤‡∏°{CCorWeight}üöò:</strong> {prbCost} ‡∏ö‡∏≤‡∏ó
              </li>
              <li className="mb-1">
                <strong>‚úÖ‡∏Ñ‡πà‡∏≤‡∏†‡∏≤‡∏©‡∏µ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏õ‡∏µ:</strong> {taxCost?.toFixed(2)} ‡∏ö‡∏≤‡∏ó
              </li>
              <li className="mb-1">
                <strong>‚ûï‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏±‡∏ö‡∏ä‡∏≥‡∏£‡∏∞‡∏•‡πà‡∏≤‡∏ä‡πâ‡∏≤:</strong> {lateFee?.toFixed(2)} ‡∏ö‡∏≤‡∏ó
              </li>
              <li className="mb-1">
                <strong>‚úÖ‡∏Ñ‡πà‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏†‡∏≤‡∏û‡∏£‡∏ñ‡πÄ‡∏≠‡∏Å‡∏ä‡∏ôüõ£Ô∏è:</strong> {inspectionCost} ‡∏ö‡∏≤‡∏ó
              </li>
              <li className="mb-1">
                <strong>‚úÖ‡∏Ñ‡πà‡∏≤‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‚ôé:</strong> {processingCost} ‡∏ö‡∏≤‡∏ó
              </li> */}
                <li>
                  <Button
                    className="text-success px-3 py-0"
                    variant="link"
                    onClick={() =>
                      handleShowPreview(selectedRegistrationBookFile || null)
                    }
                  >
                    ‡∏†‡∏≤‡∏û‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏†‡∏≤‡∏û‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                  </Button>{" "}
                  <Button
                    className="text-success my-3 px-0 py-0"
                    variant="link"
                    onClick={() =>
                      handleShowPreview(selectedLicenseFile || null)
                    }
                  >
                    ‡∏†‡∏≤‡∏û‡πÅ‡∏ú‡πà‡∏ô‡∏õ‡πâ‡∏≤‡∏¢‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
                  </Button>
                </li>
                <li></li>
                <li className="mb-1">
                  <strong>
                    üôè‚≠ê‡∏Ç‡∏≠‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÅ‡∏à‡πâ‡∏á‡∏¢‡∏≠‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô :{" "}
                    {totalCost?.toFixed(2)} ‡∏ö‡∏≤‡∏ó‡∏Ñ‡πà‡∏∞
                  </strong>
                </li>
                <li className="mb-1">
                  <strong>‚úÖ1.üéØ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß</strong>
                </li>
                <li className="mb-1">
                  <strong>
                    ‚úÖ2.üíµ‡πÅ‡∏à‡πâ‡∏á‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õüßæ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÑ‡∏õüôè
                  </strong>
                </li>
                <li className="mb-1">
                  <strong>
                    ‚úÖ3.‡∏ó‡πà‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏öüìë‡∏û.‡∏£.‡∏ö.‡∏ó‡∏±‡∏ô‡∏ó‡∏µ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢
                  </strong>
                </li>
                <li className="mb-1">
                  <strong>
                    ‚úÖ4.‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ô‡∏±‡∏î‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡∏£‡∏±‡∏ö‡∏£‡∏ñ(‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏†‡∏≤‡∏û‡∏£‡∏ñ‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô
                    ‡∏ï‡∏£‡∏≠)
                  </strong>
                </li>
                <li className="mb-4">
                  <strong>‚úÖ‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏ö‡∏û‡∏£‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡∏ï‡∏•‡∏≠‡∏î‡πÑ‡∏õüôè‚ù§Ô∏è</strong>
                </li>
                <li className="mb-1">
                  <strong>
                    üì¢‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡πà‡∏≤‡∏ô‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°SMS‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á‡∏Ø‡∏û.‡∏£.‡∏ö.‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ó‡∏µ‡πà‡∏ó‡πà‡∏≤‡∏ô‡πÅ‡∏à‡πâ‡∏á‡∏°‡∏≤‡∏ô‡∏∞‡∏Ñ‡∏∞‚ù§Ô∏è
                  </strong>
                </li>
              </ul>
            )}
          </Col>
        </Row>

        <hr className="my-4" />

        <footer>
          <Row className="justify-content-end">
            <Col className="form-button-container" xs="auto">
              <Button
                className="form-button mx-3"
                variant="outline-success"
                onClick={onBack}
              >
                ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
              </Button>
              <Button
                className="form-button"
                variant="success"
                onClick={handleOpenModal}
              >
                ‡∏™‡πà‡∏á
              </Button>
            </Col>
          </Row>
        </footer>

        <AlertModal
          show={showModal}
          onBack={() => {
            setShowModal(false);
          }}
          onSuccess={() => {
            window.location.reload();
            onBack();
            setShowModal(false);
          }}
          onConfirm={
            success
              ? () => {
                  onBack();
                  setShowModal(false);
                }
              : handleConfirm
          }
          message={modalMessage}
          success={success}
        />
      </Form>
      {/* Modal ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå */}
      <Modal show={showPhotoModal} onHide={handleCloseModal} centered>
        <Modal.Header closeButton>
          <Modal.Title>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          {fileType === "application/pdf" ? (
            <div style={{ height: "500px" }}>
              <Viewer fileUrl={previewUrl || ""} />
            </div>
          ) : (
            <Image src={previewUrl || ""} alt="Preview" fluid />
          )}
        </Modal.Body>
      </Modal>
    </div>
  );
};

export default Summary;
