//resultDelivery.tsx
import React, { useState, ReactNode } from "react";
import { Button, Row, Col, Form, Modal, Image, Spinner } from "react-bootstrap";
import { Viewer } from "@react-pdf-viewer/core";
import "@react-pdf-viewer/core/lib/styles/index.css";
import { calculateDelivery } from "../../data/calculateDelivery";
import { db } from "../../../firebaseConfig";
import { collection, addDoc } from "firebase/firestore";
import AlertModal from "../textFillComponent/alertModal";
import dayjs from "dayjs";
import "dayjs/locale/th";
import { FaCheckCircle, FaExclamationTriangle } from "react-icons/fa";
import { VscError } from "react-icons/vsc";

interface ResultDeliveryProps {
  deliveryType: string;
  senderInfo: {
    username: string;
    contactNumber: string;
    ownerData: string;
    dormitory: string;
    soi: string;
    houseNo: string;
    villageNo: string;
    subDistrict: string;
    district: string;
    province: string;
    postalCode: string;
    selectedFilePath: File | null;
  };
  receiverInfo: {
    username: string;
    contactNumber: string;
    dormitory: string;
    soi: string;
    houseNo: string;
    villageNo: string;
    subDistrict: string;
    district: string;
    province: string;
    postalCode: string;
  };
  vehicleInfo?: {
    carType: string;
    ccSize: number;
    registrationBookFilePath?: File | null;
    idCardFilePath?: File | null;
  };
  status: string;

  onBack: () => void;
}

const ResultDelivery: React.FC<ResultDeliveryProps> = ({
  deliveryType,
  senderInfo,
  receiverInfo,
  vehicleInfo,
  onBack,
}) => {
  const [showPhotoModal, setShowPhotoModal] = useState(false);
  const [previewUrl, setPreviewUrl] = useState<string | null>(null);
  const [fileType, setFileType] = useState<string | null>(null);

  const [isSubmitting, setIsSubmitting] = useState(false);

  const deliveryCost =
    vehicleInfo && deliveryType === "‡∏™‡πà‡∏á‡∏£‡∏ñ‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô"
      ? calculateDelivery(receiverInfo.province, vehicleInfo.ccSize)
      : null;

  const handleShowPreview = (file: File | null) => {
    if (file) {
      const previewUrl = URL.createObjectURL(file); // ‡∏™‡∏£‡πâ‡∏≤‡∏á URL ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå
      setPreviewUrl(previewUrl);
      setFileType(file.type); // ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
      setShowPhotoModal(true);
    }
  };

  const handleCloseModal = () => {
    setShowPhotoModal(false);
    setPreviewUrl(null);
    setFileType(null);
  };

  const [showModal, setShowModal] = useState(false);
  const [modalMessage, setModalMessage] = useState<ReactNode>(null);
  const [success, setSuccess] = useState(false);

  const handleConfirm = async () => {
    setIsSubmitting(true);
    try {
      const formData = new FormData();

      if (senderInfo.selectedFilePath) {
        formData.append("passportOrIDnumberFile", senderInfo.selectedFilePath);
      }
      if (vehicleInfo?.registrationBookFilePath) {
        formData.append(
          "registrationBookFileDelivery",
          vehicleInfo.registrationBookFilePath
        );
      }
      if (vehicleInfo?.idCardFilePath) {
        formData.append("licenseFileDelivery", vehicleInfo.idCardFilePath);
      }

      // console.log("FormData Entries:", Array.from(formData.entries()));

      const response = await fetch(
        "https://api.mittaemaefahlung88.com/upload-multiple",
        {
          method: "POST",
          body: formData,
        }
      );

      if (!response.ok) {
        const errorData = await response.json();
        console.error("Upload error details:", errorData);
        throw new Error("Failed to upload files to server");
      }

      const responseData = await response.json();

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
      if (!responseData.passportOrIDnumberFile) {
        throw new Error("Response data missing required passport/ID file");
      }

      // ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
      const registrationBookFileDelivery =
        responseData.registrationBookFileDelivery || null;
      const licenseFileDelivery = responseData.licenseFileDelivery || null;

      // console.log("Files uploaded successfully:", {
      //   passportOrIDnumberFile: responseData.passportOrIDnumberFile,
      //   registrationBookFileDelivery,
      //   licenseFileDelivery,
      // });

      const uploadTime = dayjs().toISOString(); // ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ISO 8601 ‡πÄ‡∏ä‡πà‡∏ô 2024-04-27T10:38:00Z

      // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Firestore
      const data = {
        deliveryType,
        senderInfo: {
          username: senderInfo.username,
          contactNumber: senderInfo.contactNumber,
          ownerData: senderInfo.ownerData,
          dormitory: senderInfo.dormitory,
          soi: senderInfo.soi,
          houseNo: senderInfo.houseNo,
          villageNo: senderInfo.villageNo,
          subDistrict: senderInfo.subDistrict,
          district: senderInfo.district,
          province: senderInfo.province,
          postalCode: senderInfo.postalCode,
          passportOrIDnumberFilePath:
            responseData.passportOrIDnumberFile.filePath,
        },
        receiverInfo: {
          username: receiverInfo.username,
          contactNumber: receiverInfo.contactNumber,
          dormitory: receiverInfo.dormitory,
          soi: receiverInfo.soi,
          houseNo: receiverInfo.houseNo,
          villageNo: receiverInfo.villageNo,
          subDistrict: receiverInfo.subDistrict,
          district: receiverInfo.district,
          province: receiverInfo.province,
          postalCode: receiverInfo.postalCode,
        },
        vehicleInfo: vehicleInfo
          ? {
              carType: vehicleInfo.carType,
              ccSize: vehicleInfo.ccSize,
              registrationBookFilePath: registrationBookFileDelivery
                ? registrationBookFileDelivery.filePath
                : null,
              idCardFilePath: licenseFileDelivery
                ? licenseFileDelivery.filePath
                : null,
            }
          : null,
        deliveryCost: deliveryCost || 0,
        uploadTime,
        status: "‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£",
      };

      await addDoc(collection(db, "delivery"), data);
      // console.log("Document written with ID: ", docRef.id);

      setModalMessage(
        <div className="d-flex flex-column align-items-center text-center">
          <FaCheckCircle className="text-success my-3" size={50} />
          <p className="px-2">
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß! ‚úÖ<br />
            ‡∏Ç‡∏≠‡∏Ç‡∏≠‡∏ö‡∏û‡∏£‡∏∞‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Å‡∏±‡∏ö‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏≤‡∏ï‡∏•‡∏≠‡∏î‡πÑ‡∏õ üôè‚ù§Ô∏è
          </p>
        </div>
      );
      setSuccess(true);
    } catch (error) {
      console.error("Error uploading file or saving data:", error);
      setModalMessage(
        <div className="d-flex flex-column align-items-center text-center">
          <VscError className="text-danger my-3" size={50} />
          <p className="px-2">‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
        </div>
      );
      setSuccess(false);
      setShowModal(true);
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleOpenModal = () => {
    setModalMessage(
      <div className="d-flex flex-column align-items-center text-center">
        <FaExclamationTriangle className="text-warning my-3" size={50} />
        <p className="px-2">
          ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ß‡πà‡∏≤
          <br />
          ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πà‡πÑ‡∏´‡∏°?
        </p>
      </div>
    );

    setSuccess(false);
    setShowModal(true);
  };

  return (
    <div>
      <Form>
        <Row className="mb-4">
          {/* ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á */}
          <Col md={6}>
            <h4 className="text-success">‚úÖ ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á</h4>
            <ul className="list-unstyled">
              <li className="my-3">
                <strong>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> {senderInfo.username}
              </li>
              <li className="my-3">
                <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</strong> {senderInfo.contactNumber}
              </li>
              <li className="mt-3 mb-0">
                <strong>
                  {senderInfo.ownerData.includes("@")
                    ? "‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï"
                    : "‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"}
                  :
                </strong>{" "}
                {senderInfo.ownerData}
              </li>
              <Button
                className="text-success px-0 py-0"
                variant="link"
                onClick={() =>
                  handleShowPreview(senderInfo.selectedFilePath || null)
                }
              >
                {senderInfo.ownerData.includes("@")
                  ? "‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏û‡∏≤‡∏™‡∏õ‡∏≠‡∏£‡πå‡∏ï"
                  : "‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô"}
              </Button>
              <li className="my-3">
                <strong>‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà:</strong> {senderInfo.houseNo}
              </li>
              <li className="my-3">
                <strong>‡∏´‡∏°‡∏π‡πà:</strong> {senderInfo.villageNo}
              </li>
              <li className="my-3">
                <strong>‡∏´‡∏≠‡∏û‡∏±‡∏Å:</strong> {senderInfo.dormitory}
              </li>
              <li className="my-3">
                <strong>‡∏ã‡∏≠‡∏¢:</strong> {senderInfo.soi}
              </li>
              <li className="my-3">
                <strong>‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á:</strong> {senderInfo.subDistrict}
              </li>
              <li className="my-3">
                <strong>‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï:</strong> {senderInfo.district}
              </li>
              <li className="my-3">
                <strong>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î:</strong> {senderInfo.province}
              </li>
              <li className="my-3 mb-4">
                <strong>‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå:</strong> {senderInfo.postalCode}
              </li>
            </ul>
          </Col>

          {/* ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö */}
          <Col md={6}>
            <h4 className="text-success">‚úÖ ‡∏ú‡∏π‡πâ‡∏£‡∏±‡∏ö</h4>
            <ul className="list-unstyled">
              <li className="my-3">
                <strong>‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</strong> {receiverInfo.username}
              </li>
              <li className="my-3">
                <strong>‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå:</strong> {receiverInfo.contactNumber}
              </li>
              <li className="my-3">
                <strong>‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà:</strong> {receiverInfo.houseNo}
              </li>
              <li className="my-3">
                <strong>‡∏´‡∏°‡∏π‡πà:</strong> {receiverInfo.villageNo}
              </li>
              <li className="my-3">
                <strong>‡∏´‡∏≠‡∏û‡∏±‡∏Å:</strong> {receiverInfo.dormitory}
              </li>
              <li className="my-3">
                <strong>‡∏ã‡∏≠‡∏¢:</strong> {receiverInfo.soi}
              </li>
              <li className="my-3">
                <strong>‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á:</strong> {receiverInfo.subDistrict}
              </li>
              <li className="my-3">
                <strong>‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï:</strong> {receiverInfo.district}
              </li>
              <li className="my-3">
                <strong>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î:</strong> {receiverInfo.province}
              </li>
              <li className="my-3 ">
                <strong>‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå:</strong> {receiverInfo.postalCode}
              </li>
            </ul>
          </Col>
        </Row>

        {deliveryType === "‡∏™‡πà‡∏á‡∏£‡∏ñ‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô" && vehicleInfo && (
          <Row className="mb-4">
            <Col>
              <h4 className="text-success">üèçÔ∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏ñ‡∏ó‡∏µ‡πà‡∏™‡πà‡∏á</h4>
              <ul className="list-unstyled">
                <li className="my-3">
                  <strong>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏£‡∏ñ‡∏à‡∏±‡∏Å‡∏£‡∏¢‡∏≤‡∏ô‡∏¢‡∏ô‡∏ï‡πå:</strong> {vehicleInfo.carType}
                </li>
                <li className="my-3">
                  <strong>‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏ CC:</strong> {vehicleInfo.ccSize}
                </li>
                <li className="my-3">
                  <strong>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏£‡∏ñ:</strong>{" "}
                  {`${deliveryCost?.toLocaleString()} ‡∏ö‡∏≤‡∏ó`}
                </li>
                <li>
                  <strong>‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏†‡∏≤‡∏û‡πÄ‡∏•‡πà‡∏°‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô:</strong>{" "}
                  <Button
                    className="text-success px-0 py-0"
                    variant="link"
                    onClick={() =>
                      handleShowPreview(
                        vehicleInfo.registrationBookFilePath || null
                      )
                    }
                  >
                    ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                  </Button>
                </li>
                <li>
                  <strong>‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏ô‡∏≤‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô:</strong>{" "}
                  <Button
                    className="text-success my-3 px-0 py-0"
                    variant="link"
                    onClick={() =>
                      handleShowPreview(vehicleInfo.idCardFilePath || null)
                    }
                  >
                    ‡∏î‡∏π‡πÑ‡∏ü‡∏•‡πå‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
                  </Button>
                </li>
              </ul>
            </Col>
          </Row>
        )}

        <footer>
          <Row className="mb-2 ">
            <Col className="form-button-container">
              <Button
                variant="outline-success"
                onClick={onBack}
                className="form-button mx-3"
              >
                ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
              </Button>
              <Button
                className="form-button"
                variant="success"
                onClick={handleOpenModal}
              >
                ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
              </Button>
            </Col>
          </Row>
        </footer>
        <AlertModal
          show={showModal}
          onBack={() => {
            setShowModal(false);
          }}
          onSuccess={() => {
            window.location.reload();
            onBack();
            setShowModal(false);
          }}
          onConfirm={
            success
              ? () => {
                  onBack();
                  setShowModal(false);
                }
              : handleConfirm
          }
          message={modalMessage}
          success={success}
        />
      </Form>
      {/* Modal ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå */}
      <Modal show={showPhotoModal} onHide={handleCloseModal} centered>
        <Modal.Header closeButton>
          <Modal.Title>‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå</Modal.Title>
        </Modal.Header>
        <Modal.Body>
          {fileType === "application/pdf" ? (
            <div style={{ height: "500px" }}>
              <Viewer fileUrl={previewUrl || ""} />
            </div>
          ) : (
            <Image src={previewUrl || ""} alt="Preview" fluid />
          )}
        </Modal.Body>
      </Modal>
      <Modal show={isSubmitting} centered>
        <Modal.Body className="text-center">
          <Spinner
            animation="border"
            variant="success"
            role="status"
            className="my-3"
          />
          <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
        </Modal.Body>
      </Modal>
    </div>
  );
};

export default ResultDelivery;
