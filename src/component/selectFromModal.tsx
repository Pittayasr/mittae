import React from "react";
import { Modal, Card, Col, Row } from "react-bootstrap";
import { useNavigate } from "react-router-dom";
import liff from "@line/liff";

interface SelectFormModalProps {
  isVisible: boolean;
  onClose: () => void;
}

const SelectFormModal: React.FC<SelectFormModalProps> = ({
  isVisible,
  onClose,
}) => {
  const navigate = useNavigate();

  const handleNavigate = (path: string) => {
    if (liff.isInClient()) {
      console.log(`üîπ ‡πÄ‡∏õ‡∏¥‡∏î‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ LINE: ${path}`);
      liff.openWindow({
        url: `https://liff.line.me/2006837252-d37PQvNy${path}`,
        external: false,
      });
    } else {
      console.log(`‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô Web Browser: ${path}`);
      navigate(path);
    }
    onClose();
  };

  const LINE_LIFF_ID = import.meta.env.VITE_LINE_LIFF_ID;

  const handleChatClick = async () => {
    try {
      if (!LINE_LIFF_ID) {
        console.error("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤ LINE_LIFF_ID, ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö .env");
        return;
      }

      // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô LIFF app (‡∏Ñ‡∏ß‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å init ‡πÄ‡∏™‡∏°‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô API)
      await liff.init({ liffId: LINE_LIFF_ID });

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!liff.isLoggedIn()) {
        liff.login();
        return; // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å login ‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
      }

      let friendStatus;
      try {
        // ‡∏•‡∏≠‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô getFriendship
        friendStatus = await liff.getFriendship();
      } catch (err) {
        console.warn(
          "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏¥‡∏á‡∏Ñ‡πå login bot ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡πÜ",
          err
        );
        // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î friendStatus ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô false ‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ error ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô'
        friendStatus = { friendFlag: false };
      }

      if (friendStatus.friendFlag) {
        console.log("‚úÖ ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏•‡πâ‡∏ß, ‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏ä‡∏ó...");
        await liff.sendMessages([
          { type: "text", text: "‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°" },
        ]);
        liff.openWindow({
          url: "https://line.me/R/ti/p/%40057pqgjw",
          external: false,
        });
      } else if (!liff.isInClient()) {
        alert("‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ô‡∏µ‡πâ‡πÉ‡∏ô‡πÅ‡∏≠‡∏õ LINE ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏ô‡∏µ‡πâ");
        window.open("https://lin.ee/fvuORcS", "_blank");
        return;
      } else {
        console.log("‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô, ‡πÄ‡∏õ‡∏¥‡∏î‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô...");
        liff.openWindow({
          url: "https://lin.ee/fvuORcS",
          external: true,
        });
      }
    } catch (error) {
      console.error("Error handling chat:", error);
    }
  };

  return (
    <Modal
      show={isVisible}
      backdrop="static"
      keyboard={false}
      size="lg"
      aria-labelledby="contained-modal-title-vcenter"
      onHide={onClose}
      centered
    >
      <Modal.Header>
        <Modal.Title>
          <h3 className="text-success">‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏£‡πâ‡∏≤‡∏ô</h3>
        </Modal.Title>
      </Modal.Header>
      <Modal.Body
        className="text-center"
        style={{ maxHeight: "85vh", overflowY: "auto" }}
      >
        <Row className="g-3">
          {/* ‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå */}
          <Col xs={6} sm={4} md={4} lg={4}>
            <Card
              className="text-center compact-card-menu-form"
              onClick={() => handleNavigate("/delivery")}
              style={{ cursor: "pointer" }}
            >
              <Card.Img
                variant="top"
                src="/data/menu/flash&‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå‡πÑ‡∏ó‡∏¢.png"
                alt="Delivery"
                className="menu-image-form"
              />
              <Card.Body className="pb-0 px-0">
                <Card.Title className="compact-card-menu-form ">
                  <p className="responsive-label-menu-form m-0">
                    Drop off
                    <br />
                    Flash + SPX
                    <br />
                    ‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå‡πÑ‡∏ó‡∏¢
                  </p>
                </Card.Title>
              </Card.Body>
            </Card>
          </Col>

          {/* ‡∏û‡∏£‡∏ö. */}
          <Col xs={6} sm={4} md={4} lg={4}>
            <Card
              className="text-center compact-card-menu-form"
              onClick={() => handleNavigate("/form")}
              style={{ cursor: "pointer" }}
            >
              <Card.Img
                variant="top"
                src="/data/menu/prb.png" // Path ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÉ‡∏ô public folder
                alt="Insurance"
                className="menu-image-form"
              />
              <Card.Body className="compact-card-menu-form pb-0 px-0">
                <Card.Title className=" responsive-label-menu-form">
                  ‡∏û‡∏£‡∏ö. ‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏©‡∏µ‡∏£‡∏ñ
                </Card.Title>
              </Card.Body>
            </Card>
          </Col>

          {/* ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô */}
          <Col xs={6} sm={4} md={4} lg={4}>
            <Card
              className="text-center compact-card-menu-form"
              onClick={() => handleNavigate("/transport")}
              style={{ cursor: "pointer" }}
            >
              <Card.Img
                variant="top"
                src="/data/menu/delivery.png"
                alt="Print"
                className="menu-image-form"
              />
              <Card.Body className="pb-0 px-0">
                <Card.Title className="compact-card-menu-form ">
                  <p className="responsive-label-menu-form m-0">
                    ‡∏™‡πà‡∏á‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏±‡∏ö‡∏ö‡πâ‡∏≤‡∏ô
                    <br />
                    ‡∏´‡∏°‡∏≤ ‡πÅ‡∏°‡∏ß ‡∏Å‡∏£‡∏∞‡∏ï‡πà‡∏≤‡∏¢
                    <br />
                    ‡∏Ø‡∏•‡∏Ø
                  </p>
                </Card.Title>
              </Card.Body>
            </Card>
          </Col>

          {/* ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏£‡πâ‡∏≤‡∏ô */}
          <Col xs={6} sm={4} md={4} lg={4}>
            <Card
              className="text-center compact-card-menu-form"
              onClick={() =>
                window.open(
                  "https://maps.app.goo.gl/RHAD9GLECXDasCfK6",
                  "_blank"
                )
              }
              style={{ cursor: "pointer" }}
            >
              <Card.Img
                variant="top"
                src="/data/menu/map.png"
                alt="Map"
                className="menu-image-form"
              />
              <Card.Body className="compact-card-menu-form pb-0 px-0">
                <Card.Title className=" responsive-label-menu-form">
                  ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏£‡πâ‡∏≤‡∏ô
                </Card.Title>
              </Card.Body>
            </Card>
          </Col>

          {/* ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô */}
          <Col xs={6} sm={4} md={4} lg={4}>
            <Card
              className="text-center compact-card-menu-form"
              onClick={handleChatClick}
              style={{ cursor: "pointer" }}
            >
              <Card.Img
                variant="top"
                src="/data/menu/live-chat.png"
                alt="Print"
                className="menu-image-form"
              />
              <Card.Body className="compact-card-menu-form pb-0 px-0">
                <Card.Title className="responsive-label-menu-form">
                  ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
                </Card.Title>
              </Card.Body>
            </Card>
          </Col>

          {/* ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô */}
          <Col xs={6} sm={4} md={4} lg={4}>
            <Card
              className="text-center compact-card-menu-form"
              onClick={() => handleNavigate("/insurance")}
              style={{ cursor: "pointer" }}
            >
              <Card.Img
                variant="top"
                src="/data/menu/insurance.png"
                alt="Map"
                className="menu-image-form"
              />
              <Card.Body className="pb-0 px-0">
                <Card.Title className="compact-card-menu-form ">
                  <p className="responsive-label-menu-form m-0">
                    ‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏†‡∏±‡∏¢
                    <br />
                    ‡∏õ1 ‡∏õ2 ‡∏õ3 ‡∏õ4 ‡∏õ5
                  </p>
                </Card.Title>
              </Card.Body>
            </Card>
          </Col>
        </Row>
      </Modal.Body>
    </Modal>
  );
};

export default SelectFormModal;
